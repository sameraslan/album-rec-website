{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["Border","react_default","a","createElement","className","this","props","children","Component","Album","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","tracks","status","axios","get","albumId","then","results","console","log","data","slice","albums","setState","catch","e","title","App_Border","href","collectionViewUrl","collectionPrice","trackCount","year","artist","src","coverArt","alt","Artist","_this2","permitSingles","permitCollaboration","_this3","artistId","length","_this4","artistName","contents","key","type","onClick","x","map","album","App_Album","collectionId","url","artworkUrl100","size","replace","collectionName","releaseDate","albumConstructor","App","App_Artist","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.50cc1e01.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport axios from 'axios'\n\nclass Border extends Component {\n  render() {\n    return (\n      <div className=\"Border\">\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nfunction enlargeArtworkUrl(url,size){\n  return url.replace(/\\/100x100/,\"/\"+size+\"x\"+size)\n}\n\nfunction albumConstructor(album){\n  return (\n    <a>\n      <Album \n        key={album.collectionId} \n        coverArt={enlargeArtworkUrl(album.artworkUrl100,350)} \n        title={album.collectionName} \n        year={album.releaseDate.slice(0,4)}\n        artist={album.artistName} \n        trackCount={album.trackCount}\n        collectionPrice={album.collectionPrice}\n        collectionViewUrl={album.collectionViewUrl}\n        albumId={album.collectionId}/>\n    </a>\n  )\n}\n\nclass Album extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {tracks:[],status:\"loading tracks\"}\n    axios.get(\"https://itunes.apple.com/lookup?collectionId=\"+this.props.albumId+\"\")\n      .then(results => {console.log(results); return results.data.results.slice(1)})\n      .then(albums => this.setState({tracks: albums}))\n      .then(this.setState({status:\"tracks loaded\"}))\n      .catch(e => {this.setState({status:\"\"+e}); console.log(e)})\n  }\n  render() {\n    var data = this.props\n    console.log(\"rendering\",data.title)\n    return (\n      <Border>\n        <a className=\"AlbumLabel\">\n          <p className=\"AlbumTitle\">{data.title}<br/>\n          <a href={data.collectionViewUrl}>${data.collectionPrice}</a></p>\n          <p className=\"AlbumArtist\">Tracks: {data.trackCount}<br/>{data.year} - {data.artist}</p>\n        </a>\n        <img src={data.coverArt} className=\"CoverArt\" alt={\"Cover of \"+data.title} />    \n      </Border>\n    )\n  }\n}\n\nclass Artist extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {albums:[], status:\"loading albums\",permitSingles:true,permitCollaboration:true}\n  }\n  componentDidMount(){\n    axios.get(\"https://itunes.apple.com/lookup?id=\"+this.props.artistId+\"&entity=album\")\n      .then(results => results.data.results.slice(1))\n      .then(albums => {this.setState({albums:albums, status:albums.length+\" albums loaded\"}); return})\n      .catch(e => {this.setState({status:\"\"+e}); console.log(e)})\n  }\n  render() {\n    console.log(\"rendering\",this.props.artistName)\n    return (\n      <div className=\"Artist\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">{this.props.artistName}</h1>\n          <p className=\"contents\">{this.props.contents}</p>\n          <p key=\"status\">Status: {this.state.status}</p>\n          <div className=\"ButtonHolder\">\n            <button type=\"button\" \n              onClick={x => this.setState({permitSingles:!this.state.permitSingles})}\n              >{this.state.permitSingles?\"Hide\":\"Show\"} Singles</button>\n            <button type=\"button\" \n              onClick={x => this.setState({permitCollaboration:!this.state.permitCollaboration})}\n              >{this.state.permitCollaboration?\"Hide\":\"Show\"} Collaboration</button>\n          </div>\n        </header>\n        <div className=\"AlbumHolder\">\n          { \n            this.state.albums.map(album => {\n              if ((this.state.permitSingles || album.trackCount > 1) &&\n                 (this.state.permitCollaboration || album.artistName === this.props.artistName))\n                {return albumConstructor(album)}\n              else {return}\n            })\n          }\n        </div>\n      </div>\n   )\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Artist artistId=\"20006408\" artistName=\"Regina Spektor\" contents=\"A list of albums released by Regina Spektor\"/>\n        {//<<Artist artistId=\"551695\" artistName=\"David Bowie\" contents=\"A list of albums released by David Bowie\"/> \n        }\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}